"""마이그레이션 스크립트 생성

Revision ID: 6c98edefc555
Revises:
Create Date: 2025-06-12 11:21:52.040960

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6c98edefc555'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('images',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('url', sa.String(length=255), nullable=False),
        # 'name' 파라미터는 ENUM 타입에 필수적일 수 있습니다.
        sa.Column('type', sa.Enum('main', 'sub', name='image_type_enum'), nullable=False),
        # 테이블 생성 시점에 CommonModel의 컬럼을 올바르게 정의합니다.
        sa.Column('created_at', sa.DateTime(), server_default=sa.func.now(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.func.now(), onupdate=sa.func.now(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=10), nullable=False),
        sa.Column('age', sa.Enum('teen', 'twenty', 'thirty', 'forty', 'fifty', name='age_enum'), nullable=False),
        sa.Column('gender', sa.Enum('male', 'female', name='gender_enum'), nullable=False),
        sa.Column('email', sa.String(length=120), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.func.now(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.func.now(), onupdate=sa.func.now(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email')
    )
    op.create_table('questions',
        sa.Column('id', sa.Integer(), nullable=False),
        # ForeignKey 제약조건을 명시적으로 추가합니다.
        sa.Column('image_id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(length=100), nullable=False),
        sa.Column('sqe', sa.Integer(), nullable=False),
        sa.Column('is_active', sa.Boolean(), server_default='1', nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.func.now(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.func.now(), onupdate=sa.func.now(), nullable=False),
        sa.ForeignKeyConstraint(['image_id'], ['images.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('choices',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('question_id', sa.Integer(), nullable=False),
        sa.Column('content', sa.String(length=255), nullable=False),
        sa.Column('sqe', sa.Integer(), nullable=False),
        sa.Column('is_active', sa.Boolean(), server_default='1', nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.func.now(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.func.now(), onupdate=sa.func.now(), nullable=False),
        sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('answers',
        sa.Column('id', sa.Integer(), nullable=False),
        # nullable=False로 복원하고 ForeignKey 제약조건을 명시합니다.
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('choice_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.func.now(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.func.now(), onupdate=sa.func.now(), nullable=False),
        sa.ForeignKeyConstraint(['choice_id'], ['choices.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # 생성의 역순으로 테이블을 삭제합니다.
    op.drop_table('answers')
    op.drop_table('choices')
    op.drop_table('questions')
    op.drop_table('users')
    op.drop_table('images')
    # ### end Alembic commands ###